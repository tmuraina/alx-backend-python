# Generated by Django 5.2.6 on 2025-09-21 21:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('conversation_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chats_conversation',
                'ordering': ['-last_message_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(help_text='Password hash stored securely', max_length=128)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number in international format', max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('role', models.CharField(choices=[('guest', 'Guest'), ('host', 'Host'), ('admin', 'Admin')], default='guest', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='chats_user_set', related_query_name='chats_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='chats_user_set', related_query_name='chats_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'chats_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_body', models.TextField(help_text='The content of the message')),
                ('sent_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('conversation', models.ForeignKey(help_text='Conversation this message belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chats.conversation')),
                ('sender', models.ForeignKey(help_text='User who sent this message', on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='chats.user')),
            ],
            options={
                'db_table': 'chats_message',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='participants',
            field=models.ManyToManyField(help_text='Users participating in this conversation', related_name='conversations', to='chats.user'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='chats_user_email_1b3736_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_id'], name='chats_user_user_id_90bd3c_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='chats_user_created_6833ca_idx'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_user_email'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_id'], name='chats_messa_message_a35d94_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender'], name='chats_messa_sender__411bbf_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation'], name='chats_messa_convers_93703a_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sent_at'], name='chats_messa_sent_at_6f1b88_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_read'], name='chats_messa_is_read_0e2e50_idx'),
        ),
        migrations.AddConstraint(
            model_name='message',
            constraint=models.CheckConstraint(check=models.Q((message_body__isnull, False)), name='message_body_not_null'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['conversation_id'], name='chats_conve_convers_ca5956_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['created_at'], name='chats_conve_created_5c8beb_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['last_message_at'], name='chats_conve_last_me_e67dfb_idx'),
        ),
    ]
